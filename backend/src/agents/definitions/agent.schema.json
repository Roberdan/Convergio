{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Agent Definition Schema",
  "description": "Schema for validating agent definition markdown files with front-matter metadata",
  "type": "object",
  "required": [
    "agent_id",
    "name",
    "role",
    "tier",
    "category",
    "capabilities",
    "system_prompt"
  ],
  "properties": {
    "agent_id": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9_]*$",
      "description": "Unique agent identifier (lowercase, alphanumeric, underscores)"
    },
    "name": {
      "type": "string",
      "minLength": 2,
      "maxLength": 100,
      "description": "Human-readable agent name"
    },
    "role": {
      "type": "string",
      "minLength": 5,
      "maxLength": 200,
      "description": "Brief description of the agent's role"
    },
    "tier": {
      "type": "string",
      "enum": ["executive", "director", "manager", "specialist", "assistant"],
      "description": "Organizational tier of the agent"
    },
    "category": {
      "type": "string",
      "enum": [
        "strategic",
        "financial",
        "technical",
        "marketing",
        "operations",
        "creative",
        "security",
        "hr",
        "legal",
        "analytics"
      ],
      "description": "Primary category of expertise"
    },
    "capabilities": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "minLength": 3
      },
      "description": "List of agent capabilities"
    },
    "tools": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "description"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Tool identifier"
          },
          "description": {
            "type": "string",
            "description": "Tool description"
          },
          "required": {
            "type": "boolean",
            "default": false,
            "description": "Whether this tool is required for the agent"
          }
        }
      },
      "description": "Tools available to the agent"
    },
    "dependencies": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z][a-z0-9_]*$"
      },
      "description": "Other agents this agent depends on"
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z][a-z0-9-]*$"
      },
      "description": "Tags for categorization and search"
    },
    "cost_per_interaction": {
      "type": "number",
      "minimum": 0,
      "maximum": 10,
      "description": "Estimated cost per interaction in dollars"
    },
    "max_context_tokens": {
      "type": "integer",
      "minimum": 1000,
      "maximum": 128000,
      "default": 8000,
      "description": "Maximum context window in tokens"
    },
    "temperature": {
      "type": "number",
      "minimum": 0,
      "maximum": 2,
      "default": 0.7,
      "description": "LLM temperature setting"
    },
    "model_preference": {
      "type": "string",
      "enum": [
        "gpt-4-turbo-preview",
        "gpt-4",
        "gpt-3.5-turbo",
        "claude-3-opus",
        "claude-3-sonnet",
        "custom"
      ],
      "description": "Preferred LLM model"
    },
    "system_prompt": {
      "type": "string",
      "minLength": 50,
      "description": "System prompt that defines the agent's behavior"
    },
    "prompt_examples": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["user", "assistant"],
        "properties": {
          "user": {
            "type": "string",
            "description": "Example user input"
          },
          "assistant": {
            "type": "string",
            "description": "Example agent response"
          }
        }
      },
      "description": "Few-shot examples for the agent"
    },
    "constraints": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Behavioral constraints and limitations"
    },
    "success_metrics": {
      "type": "object",
      "properties": {
        "accuracy": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "response_time_ms": {
          "type": "integer",
          "minimum": 0
        },
        "user_satisfaction": {
          "type": "number",
          "minimum": 0,
          "maximum": 5
        }
      },
      "description": "Success metrics for agent performance"
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "default": "1.0.0",
      "description": "Agent version (semantic versioning)"
    },
    "created_at": {
      "type": "string",
      "format": "date-time",
      "description": "Creation timestamp"
    },
    "updated_at": {
      "type": "string",
      "format": "date-time",
      "description": "Last update timestamp"
    },
    "author": {
      "type": "string",
      "description": "Agent author/creator"
    },
    "status": {
      "type": "string",
      "enum": ["active", "beta", "deprecated", "disabled"],
      "default": "active",
      "description": "Agent status"
    }
  },
  "additionalProperties": false
}